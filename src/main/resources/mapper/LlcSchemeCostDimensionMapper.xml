<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njust.mapper.LlcSchemeCostDimensionMapper">
  <resultMap id="BaseResultMap" type="com.njust.model.LlcSchemeCostDimension">
    <result column="SCHEME_ID" jdbcType="DECIMAL" property="schemeId" />
    <result column="COST_ID" jdbcType="DECIMAL" property="costId" />
    <result column="SUPER_COST_ID" jdbcType="DECIMAL" property="superCostId" />
    <result column="BELONG_PRODUCT_ID" jdbcType="DECIMAL" property="belongProductId" />
    <result column="BELONG_TASK_ID" jdbcType="DECIMAL" property="belongTaskId" />
    <result column="BELONG_RESOURCE_ID" jdbcType="DECIMAL" property="belongResourceId" />
    <result column="BELONG_TIME_ID" jdbcType="DECIMAL" property="belongTimeId" />
    <result column="BELONG_TECHNOLOGY_ID" jdbcType="DECIMAL" property="belongTechnologyId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    SCHEME_ID, COST_ID, SUPER_COST_ID, BELONG_PRODUCT_ID, BELONG_TASK_ID, BELONG_RESOURCE_ID, 
    BELONG_TIME_ID, BELONG_TECHNOLOGY_ID
  </sql>
  <select id="selectByExample" parameterType="com.njust.model.LlcSchemeCostDimensionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from llc_scheme_cost_dimension
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.njust.model.LlcSchemeCostDimensionExample">
    delete from llc_scheme_cost_dimension
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.njust.model.LlcSchemeCostDimension">
    insert into llc_scheme_cost_dimension (SCHEME_ID, COST_ID, SUPER_COST_ID, 
      BELONG_PRODUCT_ID, BELONG_TASK_ID, BELONG_RESOURCE_ID, 
      BELONG_TIME_ID, BELONG_TECHNOLOGY_ID)
    values (#{schemeId,jdbcType=DECIMAL}, #{costId,jdbcType=DECIMAL}, #{superCostId,jdbcType=DECIMAL}, 
      #{belongProductId,jdbcType=DECIMAL}, #{belongTaskId,jdbcType=DECIMAL}, #{belongResourceId,jdbcType=DECIMAL}, 
      #{belongTimeId,jdbcType=DECIMAL}, #{belongTechnologyId,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.njust.model.LlcSchemeCostDimension">
    insert into llc_scheme_cost_dimension
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="schemeId != null">
        SCHEME_ID,
      </if>
      <if test="costId != null">
        COST_ID,
      </if>
      <if test="superCostId != null">
        SUPER_COST_ID,
      </if>
      <if test="belongProductId != null">
        BELONG_PRODUCT_ID,
      </if>
      <if test="belongTaskId != null">
        BELONG_TASK_ID,
      </if>
      <if test="belongResourceId != null">
        BELONG_RESOURCE_ID,
      </if>
      <if test="belongTimeId != null">
        BELONG_TIME_ID,
      </if>
      <if test="belongTechnologyId != null">
        BELONG_TECHNOLOGY_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="schemeId != null">
        #{schemeId,jdbcType=DECIMAL},
      </if>
      <if test="costId != null">
        #{costId,jdbcType=DECIMAL},
      </if>
      <if test="superCostId != null">
        #{superCostId,jdbcType=DECIMAL},
      </if>
      <if test="belongProductId != null">
        #{belongProductId,jdbcType=DECIMAL},
      </if>
      <if test="belongTaskId != null">
        #{belongTaskId,jdbcType=DECIMAL},
      </if>
      <if test="belongResourceId != null">
        #{belongResourceId,jdbcType=DECIMAL},
      </if>
      <if test="belongTimeId != null">
        #{belongTimeId,jdbcType=DECIMAL},
      </if>
      <if test="belongTechnologyId != null">
        #{belongTechnologyId,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njust.model.LlcSchemeCostDimensionExample" resultType="java.lang.Long">
    select count(*) from llc_scheme_cost_dimension
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update llc_scheme_cost_dimension
    <set>
      <if test="record.schemeId != null">
        SCHEME_ID = #{record.schemeId,jdbcType=DECIMAL},
      </if>
      <if test="record.costId != null">
        COST_ID = #{record.costId,jdbcType=DECIMAL},
      </if>
      <if test="record.superCostId != null">
        SUPER_COST_ID = #{record.superCostId,jdbcType=DECIMAL},
      </if>
      <if test="record.belongProductId != null">
        BELONG_PRODUCT_ID = #{record.belongProductId,jdbcType=DECIMAL},
      </if>
      <if test="record.belongTaskId != null">
        BELONG_TASK_ID = #{record.belongTaskId,jdbcType=DECIMAL},
      </if>
      <if test="record.belongResourceId != null">
        BELONG_RESOURCE_ID = #{record.belongResourceId,jdbcType=DECIMAL},
      </if>
      <if test="record.belongTimeId != null">
        BELONG_TIME_ID = #{record.belongTimeId,jdbcType=DECIMAL},
      </if>
      <if test="record.belongTechnologyId != null">
        BELONG_TECHNOLOGY_ID = #{record.belongTechnologyId,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update llc_scheme_cost_dimension
    set SCHEME_ID = #{record.schemeId,jdbcType=DECIMAL},
      COST_ID = #{record.costId,jdbcType=DECIMAL},
      SUPER_COST_ID = #{record.superCostId,jdbcType=DECIMAL},
      BELONG_PRODUCT_ID = #{record.belongProductId,jdbcType=DECIMAL},
      BELONG_TASK_ID = #{record.belongTaskId,jdbcType=DECIMAL},
      BELONG_RESOURCE_ID = #{record.belongResourceId,jdbcType=DECIMAL},
      BELONG_TIME_ID = #{record.belongTimeId,jdbcType=DECIMAL},
      BELONG_TECHNOLOGY_ID = #{record.belongTechnologyId,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>