<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njust.mapper.ZxFResultRevEquipMapper">
  <resultMap id="BaseResultMap" type="com.njust.model.ZxFResultRevEquip">
    <result column="VS_ID" jdbcType="DECIMAL" property="vsId" />
    <result column="STA_ID" jdbcType="DECIMAL" property="staId" />
    <result column="ITEM_ID" jdbcType="DECIMAL" property="itemId" />
    <result column="REV_EQUIP_NUM" jdbcType="DECIMAL" property="revEquipNum" />
    <result column="FIX_EQUIP_NUM" jdbcType="DECIMAL" property="fixEquipNum" />
    <result column="EQUIP_FILL_RATE" jdbcType="DECIMAL" property="equipFillRate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    VS_ID, STA_ID, ITEM_ID, REV_EQUIP_NUM, FIX_EQUIP_NUM, EQUIP_FILL_RATE
  </sql>
  <select id="selectByExample" parameterType="com.njust.model.ZxFResultRevEquipExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zx_f_result_rev_equip
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.njust.model.ZxFResultRevEquipExample">
    delete from zx_f_result_rev_equip
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.njust.model.ZxFResultRevEquip">
    insert into zx_f_result_rev_equip (VS_ID, STA_ID, ITEM_ID, 
      REV_EQUIP_NUM, FIX_EQUIP_NUM, EQUIP_FILL_RATE
      )
    values (#{vsId,jdbcType=DECIMAL}, #{staId,jdbcType=DECIMAL}, #{itemId,jdbcType=DECIMAL}, 
      #{revEquipNum,jdbcType=DECIMAL}, #{fixEquipNum,jdbcType=DECIMAL}, #{equipFillRate,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.njust.model.ZxFResultRevEquip">
    insert into zx_f_result_rev_equip
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="vsId != null">
        VS_ID,
      </if>
      <if test="staId != null">
        STA_ID,
      </if>
      <if test="itemId != null">
        ITEM_ID,
      </if>
      <if test="revEquipNum != null">
        REV_EQUIP_NUM,
      </if>
      <if test="fixEquipNum != null">
        FIX_EQUIP_NUM,
      </if>
      <if test="equipFillRate != null">
        EQUIP_FILL_RATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="vsId != null">
        #{vsId,jdbcType=DECIMAL},
      </if>
      <if test="staId != null">
        #{staId,jdbcType=DECIMAL},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=DECIMAL},
      </if>
      <if test="revEquipNum != null">
        #{revEquipNum,jdbcType=DECIMAL},
      </if>
      <if test="fixEquipNum != null">
        #{fixEquipNum,jdbcType=DECIMAL},
      </if>
      <if test="equipFillRate != null">
        #{equipFillRate,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njust.model.ZxFResultRevEquipExample" resultType="java.lang.Long">
    select count(*) from zx_f_result_rev_equip
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zx_f_result_rev_equip
    <set>
      <if test="record.vsId != null">
        VS_ID = #{record.vsId,jdbcType=DECIMAL},
      </if>
      <if test="record.staId != null">
        STA_ID = #{record.staId,jdbcType=DECIMAL},
      </if>
      <if test="record.itemId != null">
        ITEM_ID = #{record.itemId,jdbcType=DECIMAL},
      </if>
      <if test="record.revEquipNum != null">
        REV_EQUIP_NUM = #{record.revEquipNum,jdbcType=DECIMAL},
      </if>
      <if test="record.fixEquipNum != null">
        FIX_EQUIP_NUM = #{record.fixEquipNum,jdbcType=DECIMAL},
      </if>
      <if test="record.equipFillRate != null">
        EQUIP_FILL_RATE = #{record.equipFillRate,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zx_f_result_rev_equip
    set VS_ID = #{record.vsId,jdbcType=DECIMAL},
      STA_ID = #{record.staId,jdbcType=DECIMAL},
      ITEM_ID = #{record.itemId,jdbcType=DECIMAL},
      REV_EQUIP_NUM = #{record.revEquipNum,jdbcType=DECIMAL},
      FIX_EQUIP_NUM = #{record.fixEquipNum,jdbcType=DECIMAL},
      EQUIP_FILL_RATE = #{record.equipFillRate,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>