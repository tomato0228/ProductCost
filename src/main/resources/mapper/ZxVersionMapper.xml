<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njust.mapper.ZxVersionMapper">
  <resultMap id="BaseResultMap" type="com.njust.model.ZxVersion">
    <id column="VS_ID" jdbcType="DECIMAL" property="vsId" />
    <result column="VS_NB" jdbcType="DECIMAL" property="vsNb" />
    <result column="VS_NAME" jdbcType="VARCHAR" property="vsName" />
    <result column="VS_CTIME" jdbcType="VARCHAR" property="vsCtime" />
    <result column="VS_TIME" jdbcType="DECIMAL" property="vsTime" />
    <result column="VS_SIMCOUNT" jdbcType="DECIMAL" property="vsSimcount" />
    <result column="PRO_ID" jdbcType="DECIMAL" property="proId" />
    <result column="VS_STEP" jdbcType="DECIMAL" property="vsStep" />
    <result column="VS_STATE" jdbcType="DECIMAL" property="vsState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    VS_ID, VS_NB, VS_NAME, VS_CTIME, VS_TIME, VS_SIMCOUNT, PRO_ID, VS_STEP, VS_STATE
  </sql>
  <select id="selectByExample" parameterType="com.njust.model.ZxVersionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zx_version
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.math.BigDecimal" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zx_version
    where VS_ID = #{vsId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal">
    delete from zx_version
    where VS_ID = #{vsId,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.njust.model.ZxVersionExample">
    delete from zx_version
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.njust.model.ZxVersion">
    insert into zx_version (VS_ID, VS_NB, VS_NAME, 
      VS_CTIME, VS_TIME, VS_SIMCOUNT, 
      PRO_ID, VS_STEP, VS_STATE
      )
    values (#{vsId,jdbcType=DECIMAL}, #{vsNb,jdbcType=DECIMAL}, #{vsName,jdbcType=VARCHAR}, 
      #{vsCtime,jdbcType=VARCHAR}, #{vsTime,jdbcType=DECIMAL}, #{vsSimcount,jdbcType=DECIMAL}, 
      #{proId,jdbcType=DECIMAL}, #{vsStep,jdbcType=DECIMAL}, #{vsState,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.njust.model.ZxVersion">
    insert into zx_version
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="vsId != null">
        VS_ID,
      </if>
      <if test="vsNb != null">
        VS_NB,
      </if>
      <if test="vsName != null">
        VS_NAME,
      </if>
      <if test="vsCtime != null">
        VS_CTIME,
      </if>
      <if test="vsTime != null">
        VS_TIME,
      </if>
      <if test="vsSimcount != null">
        VS_SIMCOUNT,
      </if>
      <if test="proId != null">
        PRO_ID,
      </if>
      <if test="vsStep != null">
        VS_STEP,
      </if>
      <if test="vsState != null">
        VS_STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="vsId != null">
        #{vsId,jdbcType=DECIMAL},
      </if>
      <if test="vsNb != null">
        #{vsNb,jdbcType=DECIMAL},
      </if>
      <if test="vsName != null">
        #{vsName,jdbcType=VARCHAR},
      </if>
      <if test="vsCtime != null">
        #{vsCtime,jdbcType=VARCHAR},
      </if>
      <if test="vsTime != null">
        #{vsTime,jdbcType=DECIMAL},
      </if>
      <if test="vsSimcount != null">
        #{vsSimcount,jdbcType=DECIMAL},
      </if>
      <if test="proId != null">
        #{proId,jdbcType=DECIMAL},
      </if>
      <if test="vsStep != null">
        #{vsStep,jdbcType=DECIMAL},
      </if>
      <if test="vsState != null">
        #{vsState,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njust.model.ZxVersionExample" resultType="java.lang.Long">
    select count(*) from zx_version
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zx_version
    <set>
      <if test="record.vsId != null">
        VS_ID = #{record.vsId,jdbcType=DECIMAL},
      </if>
      <if test="record.vsNb != null">
        VS_NB = #{record.vsNb,jdbcType=DECIMAL},
      </if>
      <if test="record.vsName != null">
        VS_NAME = #{record.vsName,jdbcType=VARCHAR},
      </if>
      <if test="record.vsCtime != null">
        VS_CTIME = #{record.vsCtime,jdbcType=VARCHAR},
      </if>
      <if test="record.vsTime != null">
        VS_TIME = #{record.vsTime,jdbcType=DECIMAL},
      </if>
      <if test="record.vsSimcount != null">
        VS_SIMCOUNT = #{record.vsSimcount,jdbcType=DECIMAL},
      </if>
      <if test="record.proId != null">
        PRO_ID = #{record.proId,jdbcType=DECIMAL},
      </if>
      <if test="record.vsStep != null">
        VS_STEP = #{record.vsStep,jdbcType=DECIMAL},
      </if>
      <if test="record.vsState != null">
        VS_STATE = #{record.vsState,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zx_version
    set VS_ID = #{record.vsId,jdbcType=DECIMAL},
      VS_NB = #{record.vsNb,jdbcType=DECIMAL},
      VS_NAME = #{record.vsName,jdbcType=VARCHAR},
      VS_CTIME = #{record.vsCtime,jdbcType=VARCHAR},
      VS_TIME = #{record.vsTime,jdbcType=DECIMAL},
      VS_SIMCOUNT = #{record.vsSimcount,jdbcType=DECIMAL},
      PRO_ID = #{record.proId,jdbcType=DECIMAL},
      VS_STEP = #{record.vsStep,jdbcType=DECIMAL},
      VS_STATE = #{record.vsState,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.njust.model.ZxVersion">
    update zx_version
    <set>
      <if test="vsNb != null">
        VS_NB = #{vsNb,jdbcType=DECIMAL},
      </if>
      <if test="vsName != null">
        VS_NAME = #{vsName,jdbcType=VARCHAR},
      </if>
      <if test="vsCtime != null">
        VS_CTIME = #{vsCtime,jdbcType=VARCHAR},
      </if>
      <if test="vsTime != null">
        VS_TIME = #{vsTime,jdbcType=DECIMAL},
      </if>
      <if test="vsSimcount != null">
        VS_SIMCOUNT = #{vsSimcount,jdbcType=DECIMAL},
      </if>
      <if test="proId != null">
        PRO_ID = #{proId,jdbcType=DECIMAL},
      </if>
      <if test="vsStep != null">
        VS_STEP = #{vsStep,jdbcType=DECIMAL},
      </if>
      <if test="vsState != null">
        VS_STATE = #{vsState,jdbcType=DECIMAL},
      </if>
    </set>
    where VS_ID = #{vsId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njust.model.ZxVersion">
    update zx_version
    set VS_NB = #{vsNb,jdbcType=DECIMAL},
      VS_NAME = #{vsName,jdbcType=VARCHAR},
      VS_CTIME = #{vsCtime,jdbcType=VARCHAR},
      VS_TIME = #{vsTime,jdbcType=DECIMAL},
      VS_SIMCOUNT = #{vsSimcount,jdbcType=DECIMAL},
      PRO_ID = #{proId,jdbcType=DECIMAL},
      VS_STEP = #{vsStep,jdbcType=DECIMAL},
      VS_STATE = #{vsState,jdbcType=DECIMAL}
    where VS_ID = #{vsId,jdbcType=DECIMAL}
  </update>
</mapper>