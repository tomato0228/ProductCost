<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njust.mapper.ZxFProdMapper">
  <resultMap id="BaseResultMap" type="com.njust.model.ZxFProd">
    <result column="F_PROD_ID" jdbcType="DECIMAL" property="fProdId" />
    <result column="PROD_ID" jdbcType="DECIMAL" property="prodId" />
    <result column="STA_ID" jdbcType="DECIMAL" property="staId" />
    <result column="PROD_NUMBER" jdbcType="DECIMAL" property="prodNumber" />
    <result column="VS_ID" jdbcType="DECIMAL" property="vsId" />
    <result column="WORKING_HOUR" jdbcType="DECIMAL" property="workingHour" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    F_PROD_ID, PROD_ID, STA_ID, PROD_NUMBER, VS_ID, WORKING_HOUR
  </sql>
  <select id="selectByExample" parameterType="com.njust.model.ZxFProdExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zx_f_prod
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.njust.model.ZxFProdExample">
    delete from zx_f_prod
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.njust.model.ZxFProd">
    insert into zx_f_prod (F_PROD_ID, PROD_ID, STA_ID, 
      PROD_NUMBER, VS_ID, WORKING_HOUR
      )
    values (#{fProdId,jdbcType=DECIMAL}, #{prodId,jdbcType=DECIMAL}, #{staId,jdbcType=DECIMAL}, 
      #{prodNumber,jdbcType=DECIMAL}, #{vsId,jdbcType=DECIMAL}, #{workingHour,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.njust.model.ZxFProd">
    insert into zx_f_prod
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fProdId != null">
        F_PROD_ID,
      </if>
      <if test="prodId != null">
        PROD_ID,
      </if>
      <if test="staId != null">
        STA_ID,
      </if>
      <if test="prodNumber != null">
        PROD_NUMBER,
      </if>
      <if test="vsId != null">
        VS_ID,
      </if>
      <if test="workingHour != null">
        WORKING_HOUR,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fProdId != null">
        #{fProdId,jdbcType=DECIMAL},
      </if>
      <if test="prodId != null">
        #{prodId,jdbcType=DECIMAL},
      </if>
      <if test="staId != null">
        #{staId,jdbcType=DECIMAL},
      </if>
      <if test="prodNumber != null">
        #{prodNumber,jdbcType=DECIMAL},
      </if>
      <if test="vsId != null">
        #{vsId,jdbcType=DECIMAL},
      </if>
      <if test="workingHour != null">
        #{workingHour,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njust.model.ZxFProdExample" resultType="java.lang.Long">
    select count(*) from zx_f_prod
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zx_f_prod
    <set>
      <if test="record.fProdId != null">
        F_PROD_ID = #{record.fProdId,jdbcType=DECIMAL},
      </if>
      <if test="record.prodId != null">
        PROD_ID = #{record.prodId,jdbcType=DECIMAL},
      </if>
      <if test="record.staId != null">
        STA_ID = #{record.staId,jdbcType=DECIMAL},
      </if>
      <if test="record.prodNumber != null">
        PROD_NUMBER = #{record.prodNumber,jdbcType=DECIMAL},
      </if>
      <if test="record.vsId != null">
        VS_ID = #{record.vsId,jdbcType=DECIMAL},
      </if>
      <if test="record.workingHour != null">
        WORKING_HOUR = #{record.workingHour,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zx_f_prod
    set F_PROD_ID = #{record.fProdId,jdbcType=DECIMAL},
      PROD_ID = #{record.prodId,jdbcType=DECIMAL},
      STA_ID = #{record.staId,jdbcType=DECIMAL},
      PROD_NUMBER = #{record.prodNumber,jdbcType=DECIMAL},
      VS_ID = #{record.vsId,jdbcType=DECIMAL},
      WORKING_HOUR = #{record.workingHour,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>