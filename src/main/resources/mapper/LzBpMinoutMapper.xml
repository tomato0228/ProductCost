<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njust.mapper.LzBpMinoutMapper">
  <resultMap id="BaseResultMap" type="com.njust.model.LzBpMinout">
    <result column="MODEL_TIME" jdbcType="VARCHAR" property="modelTime" />
    <result column="MINOUT_INDEX" jdbcType="DECIMAL" property="minoutIndex" />
    <result column="MINOUT_VALUE" jdbcType="DECIMAL" property="minoutValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    MODEL_TIME, MINOUT_INDEX, MINOUT_VALUE
  </sql>
  <select id="selectByExample" parameterType="com.njust.model.LzBpMinoutExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lz_bp_minout
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.njust.model.LzBpMinoutExample">
    delete from lz_bp_minout
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.njust.model.LzBpMinout">
    insert into lz_bp_minout (MODEL_TIME, MINOUT_INDEX, MINOUT_VALUE
      )
    values (#{modelTime,jdbcType=VARCHAR}, #{minoutIndex,jdbcType=DECIMAL}, #{minoutValue,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.njust.model.LzBpMinout">
    insert into lz_bp_minout
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="modelTime != null">
        MODEL_TIME,
      </if>
      <if test="minoutIndex != null">
        MINOUT_INDEX,
      </if>
      <if test="minoutValue != null">
        MINOUT_VALUE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="modelTime != null">
        #{modelTime,jdbcType=VARCHAR},
      </if>
      <if test="minoutIndex != null">
        #{minoutIndex,jdbcType=DECIMAL},
      </if>
      <if test="minoutValue != null">
        #{minoutValue,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njust.model.LzBpMinoutExample" resultType="java.lang.Long">
    select count(*) from lz_bp_minout
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update lz_bp_minout
    <set>
      <if test="record.modelTime != null">
        MODEL_TIME = #{record.modelTime,jdbcType=VARCHAR},
      </if>
      <if test="record.minoutIndex != null">
        MINOUT_INDEX = #{record.minoutIndex,jdbcType=DECIMAL},
      </if>
      <if test="record.minoutValue != null">
        MINOUT_VALUE = #{record.minoutValue,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update lz_bp_minout
    set MODEL_TIME = #{record.modelTime,jdbcType=VARCHAR},
      MINOUT_INDEX = #{record.minoutIndex,jdbcType=DECIMAL},
      MINOUT_VALUE = #{record.minoutValue,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>